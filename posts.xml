<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>bobt.me</title>
<link>https://jakeybob.github.io/posts.html</link>
<atom:link href="https://jakeybob.github.io/posts.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.0.38</generator>
<lastBuildDate>Sat, 29 Apr 2023 23:00:00 GMT</lastBuildDate>
<item>
  <title>Watermelon 3D Action</title>
  <dc:creator>Bob</dc:creator>
  <link>https://jakeybob.github.io/posts/20230430_watermelon/index.html</link>
  <description><![CDATA[ 




<p>This is a test to see if <code>usdz</code> files display in a nice interactive way… (probably only works on iOS Safari…?)</p>
<p><a rel="ar" href="pics/watermelon.usdz"> <img src="https://jakeybob.github.io/posts/20230430_watermelon/pics/watermelon.jpeg"> </a></p>



 ]]></description>
  <category>modelling</category>
  <category>AR</category>
  <guid>https://jakeybob.github.io/posts/20230430_watermelon/index.html</guid>
  <pubDate>Sat, 29 Apr 2023 23:00:00 GMT</pubDate>
  <media:content url="https://jakeybob.github.io/posts/20230430_watermelon/pics/watermelons.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Agent-Based Frippery</title>
  <dc:creator>Bob</dc:creator>
  <link>https://jakeybob.github.io/posts/20230103_abm_dsap/index.html</link>
  <description><![CDATA[ 




<p>Recently I got the chance to investigate how to write agent-based models using Julia, and the Agents.jl library. Lots more detail (as well as code etc) <a href="https://github.com/jakeybob/abm-dsap">here</a> … but it was pretty easy to set up a simulation of a populated space, include pathfinding for agents…</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="https://user-images.githubusercontent.com/304817/208320163-64145f69-bd68-4c03-965f-f1b978c90e49.mp4" class="img-fluid" controls=""><a href="https://user-images.githubusercontent.com/304817/208320163-64145f69-bd68-4c03-965f-f1b978c90e49.mp4">Video</a></video></p>
<p></p><figcaption class="figure-caption"><em>2D office simulation</em></figcaption><p></p>
</figure>
</div>
<p>… and then use this to record the time and place where infected agents (coloured <em>red</em> in the animation) transmit their disease to uninfected (in <em>blue</em>) agents.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://jakeybob.github.io/posts/20230103_abm_dsap/pics/case-1.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption"><em>infection heatmap</em></figcaption><p></p>
</figure>
</div>



 ]]></description>
  <category>modelling</category>
  <category>code</category>
  <category>Julia</category>
  <category>agent-based</category>
  <category>epidemiology</category>
  <guid>https://jakeybob.github.io/posts/20230103_abm_dsap/index.html</guid>
  <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://jakeybob.github.io/posts/20230103_abm_dsap/pics/case-1.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Clifford Attractor</title>
  <dc:creator>Bob</dc:creator>
  <link>https://jakeybob.github.io/posts/20230101_clifford_attractor/index.html</link>
  <description><![CDATA[ 




<p>Inspired by <a href="https://fronkonstin.com/2017/11/07/drawing-10-million-points-with-ggplot-clifford-attractors/">this</a> blog post. The <em>R</em> code below creates the individual video frames (a <a href="http://paulbourke.net/fractals/clifford/">Clifford</a> attractor where one of the four parameters is stepped along with the frame count), which are then knitted together using <em>FFMPEG</em>.</p>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/wK6wuTOnhbM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
<div class="cell">
<details>
<summary>show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(Rcpp)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(foreach)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(doParallel)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">registerDoParallel</span>(parallel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">detectCores</span>())</span>
<span id="cb1-7"></span>
<span id="cb1-8">pic_dir <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"pics"</span></span>
<span id="cb1-9">output_video <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"output.mp4"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">opt <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position  =</span> <span class="st" style="color: #20794D;">"none"</span>,</span>
<span id="cb1-12">            <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill=</span><span class="st" style="color: #20794D;">"black"</span>),</span>
<span id="cb1-13">            <span class="at" style="color: #657422;">plot.margin =</span> <span class="fu" style="color: #4758AB;">margin</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">8</span>, <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">8</span>, <span class="at" style="color: #657422;">unit =</span> <span class="st" style="color: #20794D;">"pt"</span>),</span>
<span id="cb1-14">            <span class="at" style="color: #657422;">axis.ticks       =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb1-15">            <span class="at" style="color: #657422;">panel.grid       =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb1-16">            <span class="at" style="color: #657422;">axis.title       =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb1-17">            <span class="at" style="color: #657422;">axis.text        =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="fu" style="color: #4758AB;">cppFunction</span>(<span class="st" style="color: #20794D;">'DataFrame createTrajectory(int n, double x0, double y0, </span></span>
<span id="cb1-20"><span class="st" style="color: #20794D;">            double a, double b, double c, double d) {</span></span>
<span id="cb1-21"><span class="st" style="color: #20794D;">            // create the columns</span></span>
<span id="cb1-22"><span class="st" style="color: #20794D;">            NumericVector x(n);</span></span>
<span id="cb1-23"><span class="st" style="color: #20794D;">            NumericVector y(n);</span></span>
<span id="cb1-24"><span class="st" style="color: #20794D;">            x[0]=x0;</span></span>
<span id="cb1-25"><span class="st" style="color: #20794D;">            y[0]=y0;</span></span>
<span id="cb1-26"><span class="st" style="color: #20794D;">            for(int i = 1; i &lt; n; ++i) {</span></span>
<span id="cb1-27"><span class="st" style="color: #20794D;">            x[i] = sin(a*y[i-1])+c*cos(a*x[i-1]);</span></span>
<span id="cb1-28"><span class="st" style="color: #20794D;">            y[i] = sin(b*x[i-1])+d*cos(b*y[i-1]);</span></span>
<span id="cb1-29"><span class="st" style="color: #20794D;">            }</span></span>
<span id="cb1-30"><span class="st" style="color: #20794D;">            // return a new data frame</span></span>
<span id="cb1-31"><span class="st" style="color: #20794D;">            return DataFrame::create(_["x"]= x, _["y"]= y);</span></span>
<span id="cb1-32"><span class="st" style="color: #20794D;">            }</span></span>
<span id="cb1-33"><span class="st" style="color: #20794D;">            '</span>)</span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;"># attractor parameters</span></span>
<span id="cb1-36">a<span class="ot" style="color: #003B4F;">=</span><span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.24458046630025</span></span>
<span id="cb1-37">b<span class="ot" style="color: #003B4F;">=</span><span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.25191834103316</span> </span>
<span id="cb1-38">c<span class="ot" style="color: #003B4F;">=</span><span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.81590817030519</span> </span>
<span id="cb1-39">d<span class="ot" style="color: #003B4F;">=</span><span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">1.90866735205054</span></span>
<span id="cb1-40"></span>
<span id="cb1-41"><span class="co" style="color: #5E5E5E;"># video settings</span></span>
<span id="cb1-42">fps <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb1-43">duration_secs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">30</span></span>
<span id="cb1-44">frac_change <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2</span> <span class="co" style="color: #5E5E5E;"># fractional change in "a" param over course of video</span></span>
<span id="cb1-45"></span>
<span id="cb1-46">max_a <span class="ot" style="color: #003B4F;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;">+</span> (a<span class="sc" style="color: #5E5E5E;">*</span>frac_change<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-47">min_a <span class="ot" style="color: #003B4F;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;">-</span> (a<span class="sc" style="color: #5E5E5E;">*</span>frac_change<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-48"></span>
<span id="cb1-49">a_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="at" style="color: #657422;">from =</span> min_a, <span class="at" style="color: #657422;">to =</span> max_a, <span class="at" style="color: #657422;">by =</span> (a<span class="sc" style="color: #5E5E5E;">*</span>frac_change)<span class="sc" style="color: #5E5E5E;">/</span>((fps<span class="dv" style="color: #AD0000;">-1</span>)<span class="sc" style="color: #5E5E5E;">*</span>duration_secs)) </span>
<span id="cb1-50"></span>
<span id="cb1-51"><span class="co" style="color: #5E5E5E;"># loop over parameter, write out png</span></span>
<span id="cb1-52"><span class="fu" style="color: #4758AB;">foreach</span> (<span class="at" style="color: #657422;">i =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(a_vec)) <span class="sc" style="color: #5E5E5E;">%dopar%</span> {</span>
<span id="cb1-53">  filename <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">file.path</span>(pic_dir, <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"pic_"</span>, i, <span class="st" style="color: #20794D;">".png"</span>))</span>
<span id="cb1-54">  df <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">createTrajectory</span>(<span class="dv" style="color: #AD0000;">10000000</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, a_vec[i], b, c, d)</span>
<span id="cb1-55">  p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ggplot</span>(df, <span class="fu" style="color: #4758AB;">aes</span>(x, y)) <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>, <span class="at" style="color: #657422;">shape =</span> <span class="dv" style="color: #AD0000;">46</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">3</span>) <span class="sc" style="color: #5E5E5E;">+</span> opt</span>
<span id="cb1-56">  </span>
<span id="cb1-57">  <span class="fu" style="color: #4758AB;">ggsave</span>(<span class="at" style="color: #657422;">plot =</span> p, <span class="at" style="color: #657422;">filename =</span> filename, <span class="at" style="color: #657422;">width =</span> <span class="fl" style="color: #AD0000;">10.8</span>, <span class="at" style="color: #657422;">height =</span> <span class="fl" style="color: #AD0000;">10.8</span>, <span class="at" style="color: #657422;">dpi =</span> <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb1-58">}</span>
<span id="cb1-59"></span>
<span id="cb1-60"><span class="do" style="color: #5E5E5E;
font-style: italic;">#### FFMPEG ####</span></span>
<span id="cb1-61">command <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"ffmpeg -y -r "</span>, fps, <span class="st" style="color: #20794D;">" -f image2 -s 1080x1080 -i "</span>, pic_dir,</span>
<span id="cb1-62">                  <span class="st" style="color: #20794D;">"/pic_%d.png -vcodec libx264 -crf 25 -pix_fmt yuv420p "</span>, output_video)</span>
<span id="cb1-63"><span class="fu" style="color: #4758AB;">system</span>(<span class="at" style="color: #657422;">command =</span> command)</span>
<span id="cb1-64"></span>
<span id="cb1-65"><span class="co" style="color: #5E5E5E;"># unlink(pic_dir, recursive = TRUE) # tidy up</span></span></code></pre></div>
</details>
</div>



 ]]></description>
  <category>modelling</category>
  <category>code</category>
  <category>R</category>
  <category>chaos</category>
  <guid>https://jakeybob.github.io/posts/20230101_clifford_attractor/index.html</guid>
  <pubDate>Sun, 01 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://jakeybob.github.io/posts/20230101_clifford_attractor/pics/pic_606.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Kolmogorov Turbulence</title>
  <dc:creator>Bob</dc:creator>
  <link>https://jakeybob.github.io/posts/20221230_turbulence/index.html</link>
  <description><![CDATA[ 




<p>This is a quck post to check that tweet embedding works sensibly.</p>
<blockquote class="twitter-tweet blockquote">
<p lang="en" dir="ltr">
a wee <a href="https://twitter.com/JuliaLanguage?ref_src=twsrc%5Etfw"><span class="citation" data-cites="JuliaLanguage">@JuliaLanguage</span></a> experiment simulating 2D Kolmogorov turbulence (code here: <a href="https://t.co/oxSc7UUErA">https://t.co/oxSc7UUErA</a>) – surprisingly non-painful😍 <a href="https://t.co/KM5LXceOHJ">pic.twitter.com/KM5LXceOHJ</a>
</p>
— Bob Taylor (<span class="citation" data-cites="jakeybob">@jakeybob</span>) <a href="https://twitter.com/jakeybob/status/1518711458187644928?ref_src=twsrc%5Etfw">April 25, 2022</a>
</blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>



 ]]></description>
  <category>modelling</category>
  <category>code</category>
  <category>Julia</category>
  <category>fluids</category>
  <guid>https://jakeybob.github.io/posts/20221230_turbulence/index.html</guid>
  <pubDate>Fri, 30 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://jakeybob.github.io/posts/20221230_turbulence/pics/turbulence.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
